{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#hunter-hassebroek-home-page","title":"Hunter Hassebroek Home Page","text":""},{"location":"#link-back-to-team-website","title":"Link back to Team Website","text":"<p>Link to Team Website</p>"},{"location":"#links-to-teammate-websites","title":"Links to Teammate Websites","text":"<ul> <li>Kirk Volin - MQTT</li> <li>Hunter Hassebroek - HMI</li> <li>Noah Brent - Actuators</li> <li>Evan Skinner - Sensors</li> </ul>"},{"location":"#links-to-other-parts-of-the-site","title":"Links to other parts of the site","text":"<ul> <li>Bill of Materials and Purchase Orders</li> <li>Diagrams and Charts </li> <li>Individual Component Selection</li> </ul>"},{"location":"#introduction","title":"Introduction","text":"<p>Hi, my name is Hunter Hassebroek, I am a Junior at Arizona State University Studying Robotics Engineering with a focus in Manufacturing Engineering. Our project is a electromagnet accelerator, my subsystem for the project is the Human Interface System. </p>"},{"location":"HMI%20API/","title":"HMI API","text":""},{"location":"HMI%20API/#message-structure","title":"Message Structure","text":"<p>Start Byte (2 uint8_t)</p> <p>Sender Address (uint8_t)</p> <p>Receiver Address (uint8_t)</p> <p>Message Type (uint8_t)</p> <p>Message (1-56 uint8_t)</p> <p>Stop Byte (2 uint8_t)</p>"},{"location":"HMI%20API/#team-definitions","title":"Team Definitions","text":""},{"location":"HMI%20API/#team-bytes","title":"Team Bytes","text":"Type Byte Start AZ Stop YB"},{"location":"HMI%20API/#team-addresses","title":"Team Addresses","text":"Name Address Noah Brent N Evan Skinner E Kirk Volin K Hunter Hassebroek H Broadcast X"},{"location":"HMI%20API/#recieved-messages","title":"Recieved Messages","text":""},{"location":"HMI%20API/#master-reset","title":"Master Reset","text":"Byte 1 Message Master Reset Variable Type char Min RST Max RST Example RST"},{"location":"HMI%20API/#mqtt-connection","title":"MQTT Connection","text":"Byte 1 Message MQTT Connection Variable Type uint8_t Min 0 Max 2 Example 0 (No connection)"},{"location":"HMI%20API/#sent-messages","title":"Sent Messages","text":""},{"location":"HMI%20API/#speed-setting","title":"Speed Setting","text":"Byte 1 Message Speed Setting Variable Type uint8_t Min 1 Max 3 Example 2 (Medium Speed)"},{"location":"HMI%20API/#error","title":"Error","text":"Byte 1 Message Error Type Variable Type uint8_t Min 0 Max 5 Example 2 <p>Error Types:</p> <p>0: Incorrect / No Start Bit</p> <p>1: Incorrect / No Address Bit</p> <p>2: Incorrect / No Message Type</p> <p>3: Incorrect / No Stop Bit</p> <p>4: Incorrect Data Value in Valid Message</p> <p>5: Bytes per Message Overflow</p>"},{"location":"HMI%20API/#hmi-reset","title":"HMI Reset","text":"Byte 1 Message HMI Reset Variable Type uint8_t Min 0 Max 1 Example 1 (reset)"},{"location":"HMI%20API/#message-handling","title":"Message handling","text":""},{"location":"HMI%20API/#hmi-message-handling-protocol","title":"HMI message handling protocol","text":"<ol> <li>Identify the start of a message and begin copying it to an array for retransmission.</li> <li> <p>When receiver identified either</p> <p>2a. If not mine, finish copying to retransmission array then retransmit</p> <p>2b. If mine, continue to step 3</p> <p>2c. If broadcast byte, copy to retransmit array, retransmit, and continue to step 3</p> </li> <li> <p>Identify message type</p> </li> <li>Interpret message data and apply as specified</li> <li>Trash message</li> <li>Transmit relevant data</li> <li>When new message is received go back to step 1</li> </ol> <p>Each step has an error check to make sure that things are proceeding smoothly, if it fails, the error code and the address it was transmitted from will be transmitted.</p> <p>To elaborate on step 6 and error handling</p>"},{"location":"HMI%20API/#error-handling-and-transmission","title":"Error handling and Transmission","text":"<ol> <li>Whenever an interruptive event occurs (ie switching info every second, error, or reset) begin construction of message in array</li> <li>To a temporary array, begin by adding start bytes and my address byte</li> <li>Then add receiving address which in most cases will be MQTT, HMI, or broadcast</li> <li>Add message type byte based on messaging protocols above</li> <li>Complete message by adding data then capping with stop bytes</li> <li>Check if already transmitting, if so wait for transmission to end and delay then send</li> <li>Otherwise send</li> <li>Trash temporary sending array</li> </ol>"},{"location":"Individual_Component_Selection/","title":"Individual Component Selection","text":""},{"location":"Individual_Component_Selection/#component-selection-hmi-system","title":"Component Selection HMI System","text":""},{"location":"Individual_Component_Selection/#role-within-group","title":"Role within Group","text":"<p>My role on the team is the HMI system. It is required that I have a screen and a control system on it for the end user to control. This will be done using an ESP32 to communicate with the board and my teammates' boards. The display will show data taken from teammates' systems and present them in graphical form (i.e. graph of average speed of ball over 10 second span).</p>"},{"location":"Individual_Component_Selection/#micro-controller-selection","title":"Micro Controller Selection","text":"Components Pros Cons ESP32-S3-WROOM-1-N4 Cost:$2.95 USD Recommended by class/Has all of the pins I need/Affordable/Optimal processing power Small form factor ESP32-S3-MINI-1U-N8 Cost:$3.10 USD Has all of the pins I need and some more Needs an additional antenna for wifi/Not worth the added hassle ESP32-S3-WROOM-1-N4R2Cost:$3.10 USD ESP32-S3-WROOM-1-N4 with PS-RAM/has all the pins I need It costs more than #1/I probably won\u2019t end up using the PS-Ram <p>Choice: ESP32-S3-WROOM-1-N4</p> <p>Justification When comparing the three options above I decided to go with option ESP32-S3-WROOM-1-N4. This is due to it being similar to the one we will be using in class. Thus it will be easier to troubleshoot since everyone in the class will have had some experience with it and makes getting it up and running easier. It is also the cheapest option out of the three, keeping it cheap is very important and means that I can splurge more on the buttons and the housing for the control system.</p>"},{"location":"Individual_Component_Selection/#screen-selection","title":"Screen Selection","text":"Components Pros Cons 2.0\" 320x240 Color IPS TFT Display with microSD Card Breakout - ST7789 EYESPI Cost:$19.95 USD BIG screen/premade libraries and examples for both I2C and SPI/good documentation on how it should be wired/has videos on how to code it Cost is 1/3 of my budget/Data sheet is unconventional but still able to be comprehended/slow refresh rate Adafruit 1.44\" Color TFT LCD Display with MicroSD Card breakout - ST7735RCost:$14.95 USD Can be seen from multiple different viewing angles without lose in image quality/ Has premade libraries and example code for I2C and SPI Its an LCD screen/ Less value than the 2\u201d version/ Slow refresh rate NHD-1.8-160128UBC3 Cost:$25.91 USD It's an OLED/ Fulfills assignment criteria No premade libraries with examples/ more expensive than the other two by at minimum five dollars/ Small screen size/ Slow refresh rate <p>Choice: GRAPHIC DISPLAY TFT RGB 2\"</p> <p>Justification I selected the GRAPHIC DISPLAY TFT RGB 2\" due to its included libraries as they were a big reason for my choice. Having example code of how to get it up and running in the language we are using is a huge help, in combination with it having examples of communication through I2C and SPI is a massive bonus. In case one is harder than the other I can always swap over to the other. It also has a leg up on the competition as I already have approval on the screen, which makes it a guaranteed best choice.</p>"},{"location":"Individual_Component_Selection/#voltage-regulator-selection","title":"Voltage Regulator Selection","text":"Components Pros Cons LM2674MX-3.3/NOPB Cost:$3.37 USD Few pins that need to be soldered/ Small Footprint Decently expensive/ only provides 500mA/ 3 Volt Output/ Min Voltage range input of 6.5V LM2576-5.0WU-TRCost:$1.79 USD Cheap/ 2 amps which would be nice if I needed to add a component to my board/ Only 5 pins to solder/ 5 Volt output/ Min Voltage range input of 4 Volts Large Footprint SC189ZSKTRT Cost:$1.89 USD Only 6 pins/ space efficient Incredibly small/Easy to lose/ Will be a headache <p>Choice: LM2576-5.0WU-TR</p> <p>Justification I chose the LM2576-5.0WU-TR since it was the best \u201cbang for your buck\u201d option that I was able to find. The wide range it has for the input voltage and the extra 2 amps it's able to provide will be a huge help if I need to swap components last second. Its footprint also allows for it to be mounted partially off the side of the board for added space.</p>"},{"location":"Individual_Component_Selection/#barrel-jack-selection","title":"Barrel Jack Selection","text":"Components Pros Cons PJ-102BCost:$0.65 USD 5 amp max current rating/Fulfills power requirements One cent more than PJ-002BH PJ-102ACost:$0.65 USD Fulfills power requirements 2.5 amp max current rating PJ-002BH Cost:$0.64 USD 5 amp max current rating/ Fulfills power requirements/ Cheaper by 1 cent It\u2019s facing to the right <p>Choice: PJ-002BH</p> <p>Justification I chose the PJ-002BH due to the price point being a cent less, as they say a penny saved is a penny earned. It also fullfills the power needs of my system.</p>"},{"location":"Individual_Component_Selection/#usb-micro-b-connector","title":"USB Micro B Connector","text":"Components Pros Cons USB3131-30-0230-A Cost:$0.77 USD Good size/ conforms to what other group member using esp32 is using/looks nice/ cheap uses usb micro b MUSB-B5-S-VT-TSMT-T/R Cost:$1.27 USD miniusb/cheap programming cables expensive 1051330001 Cost:$1.05 USD fits the needs of the project/ 5 contacts uses usb micro b <p>Choice:USB3131-30-0230-A</p> <p>Justification  The USB3131-30-0230-A was chosen for conformity with the other teammate using the esp32, this way if problems arise we are able to help eachother with getting USB Micro B port to work. It is also cheap and an effective USB Micro B port with only a bare minimum amount of pins required. The other two won't have the same in person support system taht the usb3131-30-0230-A will have.</p>"},{"location":"Individual_Component_Selection/#buttons","title":"Buttons","text":"Components Pros Cons Arcade Button with LED - 30mm Translucent Blue Cost:$2.50 USD Good value per button/has option to light up/ cheap/ large size will need large housing and said housing will need to be deep 1187 Cost:$9.95 USD Very large button size/ Can be seen from a mile away Price MX2A-G1NB Cost:$1.75 USD Cheapest of the 3/ gets the job done WAY to small for the application this needs to be geared towards <p>Choice:Arcade Button with LED - 30mm Translucent Blue</p> <p>Justification The button was chosen due to its large size and the five different color ways it had. Due to needing 5 different buttons for my system to control menuing, this is not only the best option to have board wise but also for readability and navigabiity of the device with each color being used for a different purpose. While the other buttons would work they are either to expensive or to small for the application these will be used for.</p>"},{"location":"Individual_Component_Selection/#micro-controller-fact-sheet","title":"Micro Controller Fact Sheet","text":"PIC18F24Q24 Info Answer Model ESP32-S3-WROOM-1-N4 Product Page Product Page Datasheet Data Sheet Technical Reference Technical Reference Vendor Vendor Code Examples Code Examples External Resources External Resources Unit Cost $2.95 Max Current Entire IC 500 mA Supply Voltage Range 3.0-3.6 V Max GPIO Current(pin) 40mA Support External Interupts Yes Required Programming,Hardware cost,url Can be programmed over USB"},{"location":"Individual_Component_Selection/#micro-controller-pin-usage-table","title":"Micro Controller Pin Usage Table","text":"Module # Available Needed Associated Pins Power 2 2 EN, 3V3 Ground 2 2 GND, GND UART 3 2 GPIO17-GPIO18, GPIO43-GPIO44 External SPI 4 4 GPIO26-GPIO32, GPIO33-GPIO37, GPIO9-GPIO14, GPIO38 I2C 2 0 Can Be Choosen Via Pin Matrix GPIO 45 10 * Motor PWM 0 0 N/A USB Programmer 1 1 GPIO19-GPIO20"},{"location":"Individual_Component_Selection/#power-budget","title":"Power Budget","text":""},{"location":"OrderFormsandBOM/","title":"BOM and Order Forms","text":""},{"location":"OrderFormsandBOM/#bill-of-materials","title":"Bill of Materials","text":""},{"location":"OrderFormsandBOM/#order-forms","title":"Order Forms","text":""},{"location":"charts/","title":"Diagrams and Charts","text":""},{"location":"charts/#block-diagram","title":"Block Diagram","text":""},{"location":"charts/#electrical-schematic-v1","title":"Electrical Schematic V1","text":""},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}